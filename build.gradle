/*
 * Copyright 2014 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories { jcenter() }
    dependencies { classpath 'com.netflix.nebula:nebula-plugin-plugin:1.9.+' }
}

description 'Opinionated plugins that wrap the gradle-ospackage-plugin'
apply plugin: 'nebula-plugin'
apply plugin: 'nebula-sign'

dependencies {
    compile 'com.netflix.nebula:gradle-ospackage-plugin:1.9.3'
    testCompile 'com.netflix.nebula:nebula-test:1.9.6'
    testCompile 'com.netflix.nebula:gradle-ospackage-plugin:1.9.3:tests'
}

def pomConfig = {
    inceptionYear '2014'

    developers {
        developer {
            id 'quidryan'
            name 'Justin Ryan'
            email 'jryan@netflix.com'
            roles{
                role 'Developer'
            }
            timezone '-8'
        }
    }
}

import nebula.plugin.publishing.maven.NebulaBaseMavenPublishingPlugin
plugins.withType(NebulaBaseMavenPublishingPlugin) {
    withMavenPublication {
        pom.withXml {
            asNode().children().last() + pomConfig
        }
    }
}
